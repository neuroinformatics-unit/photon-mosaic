"""
Photon Mosaic Main Workflow

This is the main Snakefile that orchestrates the entire photon mosaic processing pipeline.
It handles dataset discovery, target generation, and coordinates the preprocessing and
suite2p analysis workflows.

The workflow:
1. Discovers datasets and their TIFF files from the raw data directory
2. Generates preprocessing targets for each dataset/session combination
3. Generates suite2p analysis targets for processed data
4. Includes preprocessing.smk and suite2p.smk modules to execute the actual processing
"""

from pathlib import Path
from photon_mosaic.dataset_discovery import DatasetDiscoverer
import logging

logging.basicConfig(level=logging.DEBUG)
logger = logging.getLogger("snakemake.workflow")

raw_data_base = Path(config["raw_data_base"]).resolve()
processed_data_base = Path(config["processed_data_base"]).resolve()
slurm_config = config.get("slurm", {})
output_pattern = config["preprocessing"]["output_pattern"]

logger.debug(f"Raw data base: {raw_data_base}")
logger.debug(f"Processed data base: {processed_data_base}")

# Discover datasets and their TIFF files using the new class-based approach
discoverer = DatasetDiscoverer(
    base_path=raw_data_base,
    pattern=config["dataset_discovery"].get("pattern", ".*"),
    exclude_patterns=config["dataset_discovery"].get("exclude_patterns"),
    substitutions=config["dataset_discovery"].get("substitutions"),
    tiff_patterns=config["dataset_discovery"].get("tiff_patterns"),
    neuroblueprint_format=config["dataset_discovery"].get("neuroblueprint_format", False),
)

discoverer.discover()

logger.debug(f"Discovered datasets: {discoverer.transformed_datasets}")
logger.debug(f"TIFF files: {discoverer.tiff_files}")

preproc_targets = [
    str(
        Path(processed_data_base)
        / dataset_name
        / discoverer.get_session_name(i, j)
        / "funcimg"
        / f"{output_pattern}{tiff_name}"
    )
    for i, dataset_name in enumerate(discoverer.transformed_datasets)
    for j in range(len(discoverer.tiff_patterns))
    for tiff_name in discoverer.tiff_files[discoverer.original_datasets[i]].get(j, [])
]

logger.debug(f"Preprocessing targets: {preproc_targets}")

suite2p_targets = [
    str(
        Path(processed_data_base)
        / dataset_name
        / discoverer.get_session_name(i, j)
        / "funcimg"
        / "suite2p"
        / "plane0"
        / fname
    )
    for i, dataset_name in enumerate(discoverer.transformed_datasets)
    for j in range(len(discoverer.tiff_patterns))
    for fname in ["F.npy", "data.bin"]
    if discoverer.tiff_files[discoverer.original_datasets[i]].get(j, [])  # Only create targets for sessions that have files
]

logger.debug(f"Suite2p targets: {suite2p_targets}")

include: "preprocessing.smk"
include: "suite2p.smk"

rule all:
    input:
        preproc_targets,
        suite2p_targets
