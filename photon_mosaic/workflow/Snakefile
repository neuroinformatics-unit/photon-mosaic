configfile: "workflow/config.yaml"

from pathlib import Path
from photon_mosaic.dataset_discovery import discover_datasets

# Define paths
raw_data_base = Path(config["raw_data_base"])
processed_data_base = Path(config["processed_data_base"])
slurm_config = config.get("slurm", {})

# Discover datasets based on configuration
datasets = discover_datasets(
    str(raw_data_base),
    pattern=config["dataset_discovery"]["pattern"],
    exclude_patterns=config["dataset_discovery"].get("exclude_patterns"),
    substitutions=config["dataset_discovery"].get("substitutions")
)

# Create dictionary of tiff paths for each dataset
tiff_paths = {
    dataset: list((raw_data_base / dataset).rglob("*.tif?"))
    for dataset in datasets
}

# Create a list of all tiff files with their dataset and tiff name
tiff_files = []
for dataset, paths in tiff_paths.items():
    for i, path in enumerate(paths):
        tiff_files.append({
            "dataset": dataset,
            "tiff_index": i,
            "tiff_name": Path(path).stem
        })

# Include preprocessing rule
include: "preprocessing.smk"

rule all:
    input:
        expand(
            [
                f"{processed_data_base}/sub-{{index}}_{{datasets}}/ses-0/funcimg/suite2p/plane0/stat.npy",
            ],
            zip,
            index=range(len(datasets)),
            datasets=datasets,
        )

rule suite2p:
    input:
        tiff=lambda wildcards: f"{processed_data_base}/sub-{wildcards.index}_{wildcards.datasets}/ses-0/funcimg/{wildcards.tiff_name}.tif",
    output:
        stat=f"{processed_data_base}/sub-{{index}}_{{datasets}}/ses-0/funcimg/suite2p/plane0/stat.npy",
        bin=f"{processed_data_base}/sub-{{index}}_{{datasets}}/ses-0/funcimg/suite2p/plane0/data.bin"
    params:
        dataset_folder=lambda wildcards: raw_data_base / wildcards.datasets,
    resources:
        **(slurm_config if slurm_config.get("use_slurm") else {}),
    run:
        from photon_mosaic.rules.suite2p_run import run_suite2p
        run_suite2p(
            input["tiff"],
            output["stat"],
            output["bin"],
            Path(params["dataset_folder"]),
            config["suite2p_ops"],
        )
